/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package assignment4;

/**
 * This is the starting point of the application.
 */
public class App {
  /**
   * The App starting point.
   *
   * @param args Unused program arguments.
   */
  public static void main(String[] args) {
    App app = new App();
    Data data = new Data();
    ConsoleUi ui = new ConsoleUi();
    data.load();
    app.start(ui, data);
  }

  /**
   * The App starting point.
   *
   * @param ui Instance of ConsoleUi class.
   * @param data Instance of Data class.
   */
  public void start(ConsoleUi ui, Data data) {
    String action = ui.startUi();
    handleInitialAction(ui, action, data);
  }

  /**
   * The App exit.
   */
  public void exit() {
    return;
  }

  /**
   * Handles the initial menu.
   *
   * @param ui Instance of ConsoleUi class.
   * @param data Instance of Data class.
   * @param action The input of the user.
   */
  public void handleInitialAction(ConsoleUi ui, String action, Data data) {
    switch (action) {
      case "1":
        String[] createdMember = ui.createMemberView();
        data.addMember(createdMember[0], createdMember[1]);
        start(ui, data);
        break;
      case "2":
        data.listMembers();
        ui.goToMainMenu();
        start(ui, data);
        break;
      case "3":
        String uniqueId = ui.selectMember();
        data.selectMember(uniqueId);
        String newAction = ui.selectedMemberView();
        handleSelectedMember(ui, newAction, data, uniqueId);
        break;
      case "4":
        ui.exit();
        data.save();
        exit();
        break;
      default:
        break;
    }
  }

  /**
   * Handles the selected member menu.
   *
   * @param ui Instance of ConsoleUi class.
   * @param data Instance of Data class.
   * @param action The input of the user.
   * @param id The id of the member.
   */
  public void handleSelectedMember(ConsoleUi ui, String action, Data data, String id) {
    switch (action) {
      case "1":
        data.deleteMember(id);
        start(ui, data);
        break;
      case "2":
        String newAction = ui.addBoatView();
        handleAddBoat(ui, newAction, data, id);
        break;
      case "3":
        String boatChoice = ui.selectBoatView();
        data.selectBoat(boatChoice, id);
        String boatAction = ui.deleteBoatView();
        handleDeleteBoat(ui, boatAction, data, id, boatChoice);
        break;
      case "4":
        start(ui, data);
        break;
      default:
        break;
    }
  }

  /**
   * Handles the add boat menu.
   *
   * @param ui Instance of ConsoleUi class.
   * @param data Instance of Data class.
   * @param action The input of the user.
   * @param id The id of the member.
   */
  public void handleAddBoat(ConsoleUi ui, String action, Data data, String id) {
    Member member = data.getMemberById(id);
    switch (action) {
      case "1":
        String[] canoe = ui.canoeView();
        data.addCanoe(canoe[0], "Canoe", Integer.parseInt(canoe[1]), member);
        start(ui, data);
        break;
      case "2":
        String[] motorboat = ui.motorboatView();
        data.addMotorboat(motorboat[0], "Motorboat", Integer.parseInt(motorboat[1]),
            Integer.parseInt(motorboat[2]), member);
        start(ui, data);
        break;
      case "3":
        String[] motorsailer = ui.motorsailerView();
        data.addMotorsailer(motorsailer[0], "Motorsailer", Integer.parseInt(motorsailer[1]),
            Integer.parseInt(motorsailer[2]), Integer.parseInt(motorsailer[3]), member);
        start(ui, data);
        break;
      case "4":
        String[] sailboat = ui.sailboatView();
        data.addSailboat(sailboat[0], "Sailboat", Integer.parseInt(sailboat[1]),
            Integer.parseInt(sailboat[2]), member);
        start(ui, data);
        break;
      default:
        break;
    }
  }

  /**
   * Handles the delete boat menu.
   *
   * @param ui Instance of ConsoleUi class.
   * @param data Instance of Data class.
   * @param action The input of the user.
   * @param id The id of the member.
   * @param name The name of the boat.
   */
  public void handleDeleteBoat(ConsoleUi ui, String action, Data data, String id, String name) {
    if (action.equals("1")) {
      data.deleteBoat(name, id);
      start(ui, data);
    } else {
      start(ui, data);
    }
  }

  /**
   * Returns a greeting.
   *
   * @return Greeting.
   */
  public String getGreeting() {
    String greeting = "Greetings";
    return greeting;
  }
}